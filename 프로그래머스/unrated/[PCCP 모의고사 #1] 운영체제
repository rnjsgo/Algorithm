import java.util.*;
class Solution {
    public long[] solution(int[][] program) {
        long[] answer = new long[11];
        Queue<int[]> wait=new PriorityQueue<>((a,b)->a[1]-b[1]);
        Queue<int[]> arrive=new PriorityQueue<>((a,b)->{
            if(a[0]==b[0]) return a[1]-b[1];
            else return a[0]-b[0];
        });
        long time=0;
        for(int[] p:program)
            wait.add(p);
        
        while(!wait.isEmpty()||!arrive.isEmpty()){
            if(!wait.isEmpty()&&time>=wait.peek()[1]){
                while(!wait.isEmpty()&&time>=wait.peek()[1]){
                    arrive.add(wait.poll());
                }
            }
            if(!arrive.isEmpty()){
                answer[arrive.peek()[0]]+=time-arrive.peek()[1];
                time+=arrive.poll()[2];    
            }
            else if(!wait.isEmpty()) time=wait.peek()[1];
        }
        
        answer[0]=time;
        return answer;
    }
}
